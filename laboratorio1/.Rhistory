library(ElemStatLearn)
data(vowel.train)
data(vowel.test)
vowel.train$y <- factor(vowel.train$y)
vowel.test$y <- factor(vowel.test$y)
set.seed(33833)
# Fit a random forest predictor relating the factor variable y to the remaining variables.
a <- randomForest(y ~ ., data = vowel.train, importance = FALSE)
b <- varImp(a)
order(b)
library(ElemStatLearn)
library(randomForest)
library(caret)
data(vowel.train)
data(vowel.test)
# Set the variable y to be a factor variable in both the training and test set.
# Then set the seed to 33833. Fit (1) a random forest predictor relating the
# factor variable y to the remaining variables and (2) a boosted predictor using
# the "gbm" method. Fit these both with the train() command in the caret package.
vowel.train$y <- factor(vowel.train$y)
vowel.test$y <- factor(vowel.test$y)
set.seed(33833)
# create models
fit1 <- train(y ~ ., data = vowel.train, method = "rf", trControl = trainControl(number = 4))
fit2 <- train(y ~ ., data = vowel.train, method = "gbm")
# predict test
predict1 <- predict(fit1, newdata = vowel.test)
predict2 <- predict(fit2, newdata = vowel.test)
# combine predictions
DF_combined <- data.frame(predict1, predict2, y = vowel.test$y)
fit_combined <- train(y ~ ., data = DF_combined, method = "gam")
predict3 <- predict(fit_combined, newdata = vowel.test)
# confusion matrixes
c1 <- confusionMatrix(predict1, vowel.test$y)
c2 <- confusionMatrix(predict2, vowel.test$y)
c3 <- confusionMatrix(predict3, DF_combined$y)
c3
setwd("/Users/pacha/Desktop/base de datos exportadores")library(foreign)
setwd("/Users/pacha/Desktop/base de datos exportadores")library(foreign)
#REEMPLAZAR LAS " SI SE PEGA DESDE EXCELsetwd("/Users/pacha/Desktop/base de datos exportadores")library(foreign)CIUDADES <- read.dbf("CIUDADES.DBF")DIRPAI <- read.dbf("DIRPAI.DBF")EJER_AUX <- read.dbf("EJER_AUX.DBF")EJETEMP <- read.dbf("EJETEMP.DBF")EXPODIRA <- read.dbf("EXPODIRA.DBF")EXPOENCA <- read.dbf("EXPOENCA.DBF")EXPOFONO <- read.dbf("EXPOFONO.DBF")EXPOMAE <- read.dbf("EXPOMAE.DBF")EXPONAB <- read.dbf("EXPONAB.DBF")NEWNAB <- read.dbf("NEWNAB.DBF")RUB_AUX <- read.dbf("RUB_AUX.DBF")SALIDA <- read.dbf("SALIDA.DBF")TABPAI <- read.dbf("TABPAI.DBF")TEMPAI <- read.dbf("TEMPAI.DBF")TEMPORAL <- read.dbf("TEMPORAL.DBF")write.csv(CIUDADES, file = "CIUDADES.csv")write.csv(DIRPAI, file = "DIRPAI.csv")write.csv(EJER_AUX, file = "EJER_AUX.csv")write.csv(EJETEMP, file = "EJETEMP.csv")write.csv(EXPODIRA, file = "EXPODIRA.csv")write.csv(EXPOENCA, file = "EXPOENCA.csv")write.csv(EXPOFONO, file = "EXPOFONO.csv")write.csv(EXPOMAE, file = "EXPOMAE.csv")write.csv(EXPONAB, file = "EXPONAB.csv")write.csv(NEWNAB, file = "NEWNAB.csv")write.csv(RUB_AUX, file = "RUB_AUX.csv")write.csv(SALIDA, file = "SALIDA.csv")write.csv(TABPAI, file = "TABPAI.csv")write.csv(TEMPAI, file = "TEMPAI.csv")write.csv(TEMPORAL, file = "TEMPORAL.csv")
#REEMPLAZAR LAS " SI SE PEGA DESDE EXCELsetwd("/Users/pacha/Desktop/base de datos exportadores")library(foreign)CIUDADES <- read.dbf("CIUDADES.DBF")DIRPAI <- read.dbf("DIRPAI.DBF")EJER_AUX <- read.dbf("EJER_AUX.DBF")EJETEMP <- read.dbf("EJETEMP.DBF")EXPODIRA <- read.dbf("EXPODIRA.DBF")EXPOENCA <- read.dbf("EXPOENCA.DBF")EXPOFONO <- read.dbf("EXPOFONO.DBF")EXPOMAE <- read.dbf("EXPOMAE.DBF")EXPONAB <- read.dbf("EXPONAB.DBF")NEWNAB <- read.dbf("NEWNAB.DBF")RUB_AUX <- read.dbf("RUB_AUX.DBF")SALIDA <- read.dbf("SALIDA.DBF")TABPAI <- read.dbf("TABPAI.DBF")TEMPAI <- read.dbf("TEMPAI.DBF")TEMPORAL <- read.dbf("TEMPORAL.DBF")write.csv(CIUDADES, file = "CIUDADES.csv")write.csv(DIRPAI, file = "DIRPAI.csv")write.csv(EJER_AUX, file = "EJER_AUX.csv")write.csv(EJETEMP, file = "EJETEMP.csv")write.csv(EXPODIRA, file = "EXPODIRA.csv")write.csv(EXPOENCA, file = "EXPOENCA.csv")write.csv(EXPOFONO, file = "EXPOFONO.csv")write.csv(EXPOMAE, file = "EXPOMAE.csv")write.csv(EXPONAB, file = "EXPONAB.csv")write.csv(NEWNAB, file = "NEWNAB.csv")write.csv(RUB_AUX, file = "RUB_AUX.csv")write.csv(SALIDA, file = "SALIDA.csv")write.csv(TABPAI, file = "TABPAI.csv")write.csv(TEMPAI, file = "TEMPAI.csv")write.csv(TEMPORAL, file = "TEMPORAL.csv")
library(foreign)
help(foreign)
??foreign
setwd("/Users/pacha/Desktop/base de datos exportadores")library(foreign)
library(shinyapps)
library(BH)
shinyapps::setAccountInfo(name='pachamaltese', token='0276E1855180CE206ADCFEF6D9C109AC', secret='fyUTO2z7l2fscKBJ9rcbqE3uXPEGeeAZid1Z75G4')
shinyapps::deployApp('/Users/pacha/Documents/Coursera/tareas y controles/Developing Data Products/proyecto/elder-population-chile')
shinyapps::deployApp('/Users/pacha/Documents/Coursera/tareas y controles/Developing Data Products/proyecto')
shinyapps::deployApp('/Users/pacha/Documents/Coursera/tareas y controles/Developing Data Products/proyecto')
# ui.R
library(rCharts)
demografia <- read.csv('instancia.csv')
# Define UI
shinyUI(fluidPage(
# Title
titlePanel("Elder Population (64+ years) Count in Chile (1992-2006)"),
p("According to several studies in Chile we have an aging population and this means to change Public Policy guidelines. In 1995 we had 36 millions of elders in Latin America and by 2025 we will have 72+ millions of elders."),
p("Therefore, it would be interesting to visualize how our elder population is aging. In the pot we can observe that as years are passing, we have more and more 70+ years elders."),
p("The plot shows the elder population (64+ years) classified by age and as females and males (I also show the total population count) from 1992 to 2006."),
p(" "),
em("A good short article about aging population in Chile and Latin America is found in ", a("http://www.gerontologia.uchile.cl/docs/chien3.htm", href="http://www.gerontologia.uchile.cl/docs/chien3.htm")),
p(" "),
em("The data was obtained from the Human Mortality Database:", a("http://www.mortality.org/cgi-bin/hmd/country.php?cntr=CHL&level=1", href="http://www.mortality.org/cgi-bin/hmd/country.php?cntr=CHL&level=1")),
p(" "),
# Sidebar
sidebarLayout(
sidebarPanel(
selectInput(inputId = "Age",
label = "Select an age to display the number of elders of that age:",
choices = c("64",
"65",
"66",
"67",
"68",
"69",
"70",
"71",
"72",
"73",
"74",
"75",
"76",
"77",
"78",
"79",
"80",
"81",
"82",
"83",
"84",
"85",
"86",
"87",
"88",
"89",
"90",
"91",
"92",
"93",
"94",
"95",
"96",
"97",
"98",
"99",
"100",
"101",
"102",
"103",
"104",
"105",
"106",
"107",
"108",
"109",
"110+"),
selected = "64"),
sliderInput("range",
label = "Time period to display:",
min = 1992,
max = 2006,
value = c(1992, 2006),
format = "0000"),
helpText(p("Move the scroll bar to adjust the period of time displayed."), p("Plot Created on 21 Feb 2015 by Pachamaltese"), img(src="https://raw.githubusercontent.com/pachamaltese/Developing-Data-Products/master/proyecto/logo.jpg"), p("This plot was created for JHU's Developing Data Products MOOC."))
),
# Show the plot
mainPanel(
strong("Give the plot a little time to load (the dataset is not small). The chart can be downloaded as PNG, PDF or SVG using the upper right icon in the plot. You can also show/hide series by clicking them below the plot."),
showOutput("lexplot", "highcharts")
)
)
))
library(rCharts)
# ui.R
library(rCharts)
demografia <- read.csv('instancia.csv')
# Define UI
shinyUI(fluidPage(
# Title
titlePanel("Elder Population (64+ years) Count in Chile (1992-2006)"),
p("According to several studies in Chile we have an aging population and this means to change Public Policy guidelines. In 1995 we had 36 millions of elders in Latin America and by 2025 we will have 72+ millions of elders."),
p("Therefore, it would be interesting to visualize how our elder population is aging. In the pot we can observe that as years are passing, we have more and more 70+ years elders."),
p("The plot shows the elder population (64+ years) classified by age and as females and males (I also show the total population count) from 1992 to 2006."),
p(" "),
em("A good short article about aging population in Chile and Latin America is found in ", a("http://www.gerontologia.uchile.cl/docs/chien3.htm", href="http://www.gerontologia.uchile.cl/docs/chien3.htm")),
p(" "),
em("The data was obtained from the Human Mortality Database:", a("http://www.mortality.org/cgi-bin/hmd/country.php?cntr=CHL&level=1", href="http://www.mortality.org/cgi-bin/hmd/country.php?cntr=CHL&level=1")),
p(" "),
# Sidebar
sidebarLayout(
sidebarPanel(
selectInput(inputId = "Age",
label = "Select an age to display the number of elders of that age:",
choices = c("64",
"65",
"66",
"67",
"68",
"69",
"70",
"71",
"72",
"73",
"74",
"75",
"76",
"77",
"78",
"79",
"80",
"81",
"82",
"83",
"84",
"85",
"86",
"87",
"88",
"89",
"90",
"91",
"92",
"93",
"94",
"95",
"96",
"97",
"98",
"99",
"100",
"101",
"102",
"103",
"104",
"105",
"106",
"107",
"108",
"109",
"110+"),
selected = "64"),
sliderInput("range",
label = "Time period to display:",
min = 1992,
max = 2006,
value = c(1992, 2006),
format = "0000"),
helpText(p("Move the scroll bar to adjust the period of time displayed."), p("Plot Created on 21 Feb 2015 by Pachamaltese"), img(src="https://raw.githubusercontent.com/pachamaltese/Developing-Data-Products/master/proyecto/logo.jpg"), p("This plot was created for JHU's Developing Data Products MOOC."))
),
# Show the plot
mainPanel(
strong("Give the plot a little time to load (the dataset is not small). The chart can be downloaded as PNG, PDF or SVG using the upper right icon in the plot. You can also show/hide series by clicking them below the plot."),
showOutput("lexplot", "highcharts")
)
)
))
# server.R
library(rCharts)
demografia <- read.csv('instancia.csv')
options(RCHART_WIDTH = 500)
shinyServer(function(input, output) {
output$lexplot <- renderChart2({
selected <- input$Age
Age <- subset(demografia, Age == selected & Year %in% seq(input$range[1], input$range[2], 1))
grafico <- hPlot(
x = "Year",
y = "People",
group = "Gender",
data = Age,
type = "spline")
grafico$yAxis(title = list(enabled = TRUE, text = 'Population count'),
labels = list(rotation = -0, align = 'right'),
replace = T)
grafico$xAxis(title = list(enabled = TRUE, text = 'Year'), labels = list(rotation = -30, align = 'right'), replace = T)
grafico$exporting(enabled = T)
return(grafico)
})
})
shinyapps::deployApp('/Users/pacha/Documents/Coursera/tareas y controles/Developing Data Products/proyecto')
set.seed(3523)library(AppliedPredictiveModeling)data(concrete)inTrain = createDataPartition(concrete$CompressiveStrength, p = 3/4)[[1]] training = concrete[ inTrain,]testing = concrete[-inTrain,]
library(caret)library(gbm)set.seed(3523)library(AppliedPredictiveModeling)data(concrete)inTrain = createDataPartition(concrete$CompressiveStrength, p = 3/4)[[1]] training = concrete[ inTrain,]testing = concrete[-inTrain,]
library(caret)
library(gbm)
set.seed(3523)library(AppliedPredictiveModeling)data(concrete)inTrain = createDataPartition(concrete$CompressiveStrength, p = 3/4)[[1]] training = concrete[ inTrain,]testing = concrete[-inTrain,]
set.seed(3523)
library(AppliedPredictiveModeling)
data(concrete)
inTrain = createDataPartition(concrete$CompressiveStrength, p = 3/4)[[1]] training = concrete[ inTrain,]
set.seed(3523)
library(AppliedPredictiveModeling)
data(concrete)
inTrain = createDataPartition(concrete$CompressiveStrength, p = 3/4)[[1]]
training = concrete[ inTrain,]
testing = concrete[-inTrain,]
testing
training
fit <- train(CompressiveStrength ~ ., data = training, method = "lasso")
plot.enet(fit$finalModel, xvar = "penalty", use.color = TRUE)
load <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
packages <- c("parallel","doParallel", "foreach", "iterators")
load(packages)
sessionInfo()
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
fit <- lm(y ~ x - 1) #modelo sin constante
summary(fit) # 0.8263
fit.c <- lm(y ~ x)
summary(fit.c)
fit.c[2]
fit.c[[2]]
fit.c[,2]
fit.c[2,]
fit.sc
fit.sc <- lm(y ~ x - 1) #modelo sin constante
summary(fit.sc) # 0.8263
fit.c <- lm(y ~ x) #modelo con constante
summary(fit.c)
fit.c
fit.c[1]
fit.c[2]
fit.c[1,1]
fit.c[1]
summary(fit.c)
summary(fit.c)$intercept
summary(fit.c)$(intercept)
summary(fit.c)$1
summary(fit.c)
summary(fit.c)$x
fit.c$1
fit.c
fit.c[1]
fit.c$coefficients
fit.c$coefficients[1]
fit.c$coefficients[2]
fit.sc$coefficients[1]
fit.c$coefficients[1]
summary(fit.c)
data(mtcars) #para cargar la librería en memoria
fit <- lm(mpg ~ wt, mtcars)
summary(fit) # -5.3445
fit$coefficients[2]
beta.1 <- fit$coefficients[2]
y <- c(12.96, 5.15, 9.07, 5.36, 13.68, 11.86, 22.49, 6.54, 17.98, 11.43, 9.73, 5.44, 5.73, 8.84, 3.78, 4.74, 4.62, 3.92, 5.2)
x1 <- c(2, 6, 3, 5, 3, 3, 0, 4, 2, 4, 5, 7, 5, 4, 9, 6, 7, 7, 7)
x2 <- c(57.5, 83.2, 67, 92.7, 40.7, 79.8, 23.5, 81, 64.4, 65.8, 69.3, 72.9, 107.5, 92.1, 86.1, 89.4, 93.3, 107.1, 116.9)
y
nrow(y)
ncol(y)
length(y)
length(x1)
length(x2)
length(y)
x0 <- c(rep(1:20))
x0
x0 <- c(rep(1,19))
x0
lenght(x0)
length(x0)
X <- matrix(x0, x1, x2, ncol=3)
X <- matrix(t(x0), t(x1), t(x2), ncol=3)
t(x0)
x0
X <- data.frame(x0,x1,x2)
X
X <- matrix(X, ncol=3)
X
X <- matrix(x0,x1,x2, ncol=3, nrow=19)
X0 <- matrix(c(rep(1,19)), ncol=1, nrow=19)
X0
X1 <- matrix(x1, ncol=1, nrow=19)
X1
x1
X2 <- matrix(x2, ncol=1, nrow=19)
X <- cbind(X0, X1, X2)
X
X
t(X)
A <- t(X)*X
A <- t(X) %*% X
A
B <- solve(A)
A <- solve(t(X) %*% X)
A
Y <- matrix(y, ncol=1, nrow=19)
B <- t(X) %*% Y
B
beta <- A %*% B
beta
library(swirl)
install_course_zip("/Users/pacha/Documents/Practica\ Fundacion\ SOL/taller-r/guias.zip", multi=TRUE,
which_course="guia1")
install_course_zip("/Users/pacha/Documents/Practica\ Fundacion\ SOL/taller-r/guias.zip", multi=TRUE,
which_course="guia1")
install_course_zip("/Users/pacha/Documents/Practica\ Fundacion\ SOL/taller-r/guia1.zip", multi=TRUE,
which_course="guia1")
swirl()
install_course_zip("/Users/pacha/Documents/Practica\ Fundacion\ SOL/taller-r/guia1.zip", multi=TRUE,
which_course="guia1")
swirl()
install_course_zip("/Users/pacha/Documents/Practica\ Fundacion\ SOL/taller-r/guia1.zip", multi=TRUE,
which_course="guia1")
swirl()
library(swirl)
new_lesson("Guia 1", "Análisis de datos")
library(swirl)
library(swirlify)
install.packages("devtools")
devtools::install_github(c("swirldev/swirl", "swirldev/swirlify"))
library(swirl)
library(swirlify)
new_lesson("Guia 1", "Análisis de datos")
install_course_zip("/Users/pacha/Análisis_de_datos.zip", multi=TRUE, which_course="Guia 1")
library(swirl)
library(swirlify)
install_course_zip("/Users/pacha/Analisis_de_datos.zip", multi=TRUE, which_course="Guia_1")
install_course_zip("/Users/pacha/Analisis_de_datos.zip", multi=TRUE, which_course="Guia_1")
install_course_zip("/Users/pacha/analisis_de_datos.zip", multi=TRUE, which_course="guia_1")
library(swirlify)
new_lesson("guias", "guia1")
new_lesson("guia1", "guias")
install_course_zip("/Users/pacha/guias.zip", multi=TRUE, which_course="guia1")
install_course_zip("/Users/pacha/guias.zip", multi=TRUE, which_course="guia1")
swirl()
exit()
quit()
library(swirl)
library(swirlify)
install_course_zip("/Users/pacha/guias.zip", multi=TRUE, which_course="guia1")
swirl()
swirl()
exit()
quit()
library(swirl)
swirl()
library(swirl)
install_course_zip("/Users/pacha/guias.zip", multi=TRUE, which_course="guia1")
swirl()
swirl()
set_lesson("/Users/pacha/guias/guia1/lesson.yaml")
library(swirlify)
set_lesson("/Users/pacha/guias/guia1/lesson.yaml")
install_course_github()
install_course_github(guias, github_username = "pachamaltese")
install_course_github(guias, github_username = "pachamaltese")
install_course_github("guias", github_username = "pachamaltese")
install_course_github("guias", github_username = "pachamaltese")
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
weighted.mean(x,w)
m <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
n <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
M0 <- matrix(c(rep(1,10)), ncol = 1, nrow = 10)
M1 <- matrix(m, ncol = 1, nrow = 10)
M<- cbind(M1)
MM <- solve(t(M) %*% M)
N <- matrix(n, ncol = 1, nrow = 10)
NN <- t(M) %*% N
betauno <- MM %*% NN
betauno
M1M <- cbind(M0 , M1)
MM1MM <- solve(t(M1M) %*% M1M)
N <- matrix(n, ncol = 1, nrow = 10)
N1N <- t(M1M) %*% N
betados<- MM1MM %*% N1N
betados
library(datasets)
data("EuStockMarkets")
library(datasets)
library(datasets)
data("EuStockMarkets")
EuStockMarkets
str(EuStockMarkets)
datasets?
help(datasets)
help("datasets")
library(help = "datasets")
data(UCBAdmissions)
UCBAdmissions
library(stringi)
# inspect the data
list.files("final")
list.files("final/en_US")
blogs <- readLines("final/en_US/en_US.blogs.txt", n = 1000, encoding="UTF-8")
list.files("final/en_US")
blogs <- readLines("final/en_US/en_US.blogs.txt", n = 1000, encoding="UTF-8")
list.files("final/en_US")
library(stringi)
# inspect the data
list.files("final")
list.files("final/en_US")
library(rCharts)
install.packages(rCharts)
install.packages("rCharts")
library("devtools")
library(devtools)
install_github("ramnathv/rCharts")
library(shinyapps)
install.packages("shinyapps")
install.packages("BH")
install_github("rstudio/shinyapps")
#install.packages("BH")
library(shinyapps)
library(BH)
shinyapps::setAccountInfo(name='pachamaltese', token='0276E1855180CE206ADCFEF6D9C109AC', secret='fyUTO2z7l2fscKBJ9rcbqE3uXPEGeeAZid1Z75G4')
shinyapps::deployApp('/Users/pacha/Documents/Coursera/tareas y controles/Developing Data Products/project/elder-population-in-chile')
#install.packages("BH")
library(shinyapps)
library(BH)
shinyapps::setAccountInfo(name='pachamaltese', token='0276E1855180CE206ADCFEF6D9C109AC', secret='fyUTO2z7l2fscKBJ9rcbqE3uXPEGeeAZid1Z75G4')
shinyapps::deployApp('/Users/pacha/Documents/Coursera/tareas y controles/Developing Data Products/project/elder-population-in-chile')
#install.packages("BH")
library(shinyapps)
library(BH)
shinyapps::setAccountInfo(name='pachamaltese', token='0276E1855180CE206ADCFEF6D9C109AC', secret='fyUTO2z7l2fscKBJ9rcbqE3uXPEGeeAZid1Z75G4')
shinyapps::deployApp('/Users/pacha/Documents/Coursera/tareas y controles/Developing Data Products/project/elder-population-in-chile')
shiny::runApp('Documents/Coursera/tareas y controles/data-science-capstone/text-prediction-app')
#install.packages("BH")
library(shinyapps)
library(BH)
shinyapps::setAccountInfo(name='pachamaltese', token='60F2B7B5E7E0AEEBA55EBAE878F20768', secret='ij/nxJV73fGhXtOupQo77AfEQTQU04wZ/es93fe7')
shinyapps::deployApp('/Users/pacha/Documents/Coursera/tareas\ y\ controles/data-science-capstone/text-prediction-app/')
#install.packages("BH")
library(shinyapps)
library(BH)
shinyapps::setAccountInfo(name='pachamaltese', token='60F2B7B5E7E0AEEBA55EBAE878F20768', secret='ij/nxJV73fGhXtOupQo77AfEQTQU04wZ/es93fe7')
shinyapps::deployApp('/Users/pacha/Documents/Coursera/tareas\ y\ controles/data-science-capstone/text-prediction-app/')
shiny::runApp('Documents/Coursera/tareas y controles/data-science-capstone/text-prediction-app')
shiny::runApp('Documents/Coursera/tareas y controles/data-science-capstone/text-prediction-app')
shiny::runApp('Documents/Coursera/tareas y controles/Developing Data Products/project/elder-population-in-chile')
setwd("/Users/pacha/Documents/ayudantias/UNAB/econometria/laboratorio\ 1/")
setwd("/Users/pacha/Documents/ayudantias/UNAB/econometria/laboratorio1/")
file <- paste0(getwd(),"/Laboratorio 1.csv")
file
data <- read.csv(file=file, head = TRUE)
file <- paste0(getwd(),"/Laboratorio1.csv")
data <- read.csv(file=file, head = TRUE)
file <- paste0(getwd(),"/laboratorio1.csv")
data <- read.csv(file=file, head = TRUE)
file <- paste0(getwd(),"/laboratorio1.csv")
data <- read.csv(file=file, head = TRUE)
data
file <- paste0(getwd(),"/laboratorio1.csv")
file
data <- read.csv(file=file, head = TRUE)
data
